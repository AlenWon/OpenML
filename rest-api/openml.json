{
    "swagger": "2.0",
    "info": {
        "title": "OpenML API",
        "description": "REST API for sharing, organizing and reusing machine learning datasets, code, and experiments. Follows a predictive URL scheme from endpoint http://www.openml.org/api_new/v1/json (or /xml). You need to add your `api_key` to every call (see your account settings), or simply log in.",
        "version": "1.0.0"
    },
    "host": "www.openml.org",
    "schemes": [
        "http"
    ],
    "basePath": "/api_new/v1/json",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/data/list": {
            "get": {
                "summary": "Lists all datasets",
                "description": "Returns an array with all datasets in the system.\n",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A dataset description"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/{id}": {
            "get": {
                "summary": "Dataset description",
                "description": "Returns information about a dataset. The information includes the name, information about the creator, URL to download it and more.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A dataset description",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data_set_description": {
                                    "$ref": "#/definitions/Data"
                                }
                            }
                        },
                        "examples": {
                            "application/json": "{\n  \"data_set_description\": {\n    \"oml:id\": \"1\",\n    \"oml:name\": \"anneal\",\n    \"oml:version\": \"2\",\n    \"oml:description\": \"...\",\n    \"oml:format\": \"ARFF\",\n    \"oml:upload_date\": \"2014-04-06 23:19:20\",\n    \"oml:licence\": \"Public\",\n    \"oml:url\": \"http://www.openml.org/data/download/1/dataset_1_anneal.arff\",\n    \"oml:file_id\": \"1\",\n    \"oml:default_target_attribute\": \"class\",\n    \"oml:version_label\": \"2\",\n    \"oml:tag\": [\n      \"study_1\",\n      \"uci\"\n    ],\n    \"oml:visibility\": \"public\",\n    \"oml:original_data_url\": \"http://www.openml.org/d/2\",\n    \"oml:status\": \"active\",\n    \"oml:md5_checksum\": \"d01f6ccd68c88b749b20bbe897de3713\"\n  }\n}"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a dataset",
                "description": "Deletes a dataset. Upon success, it returns the ID of the deleted dataset.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "ID of the deleted dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data": {
            "post": {
                "summary": "Uploads a dataset",
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Uploads a dataset. Upon success, it returns the data id.\n",
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "An XML file describing the dataset",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "dataset",
                        "in": "formData",
                        "description": "The actual dataset, being an ARFF file.",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "Id of the uploaded dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/{id}/features": {
            "get": {
                "summary": "Features, data types",
                "description": "Returns the features of a dataset.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A the features of the dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/{id}/qualities": {
            "get": {
                "summary": "Data qualitues, meta-features",
                "description": "Returns the qualities of a dataset.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A the qualities of the dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/tag": {
            "post": {
                "summary": "Tag a dataset",
                "description": "Tags a dataset.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "data_id",
                        "in": "formData",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the tagged dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/untag": {
            "post": {
                "summary": "Untags a dataset",
                "description": "Untags a dataset.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "data_id",
                        "in": "formData",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A the features of the dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/list": {
            "get": {
                "summary": "Lists all flows",
                "description": "Returns an array with all flows in the system.\n",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A list of flows"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/{id}": {
            "get": {
                "summary": "Flow description",
                "description": "Returns information about a flow. The information includes the name, information about the creator, dependencies, parameters, run instructions and more.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the flow.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A flow description",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "flow_description": {
                                    "$ref": "#/definitions/Flow"
                                }
                            }
                        },
                        "examples": {
                            "application/json": "{\n  \"flow\": {\n    \"oml:id\":\"100\",\n    \"oml:uploader\":\"1\",\n    \"oml:name\":\"weka.J48\",\n    \"oml:version\":\"2\",\n    \"oml:external_version\":\"Weka_3.7.5_9117\",\n    \"oml:description\":\"...\",\n    \"oml:upload_date\":\"2014-04-23 18:00:36\",\n    \"oml:language\":\"Java\",\n    \"oml:dependencies\":\"Weka_3.7.5\",\n    \"oml:parameter\": [\n      {\n        \"oml:name\":\"A\",\n        \"oml:data_type\":\"flag\",\n        \"oml:default_value\":[],\n        \"oml:description\":\"Laplace smoothing...\"\n      },\n      {\n        \"oml:name\":\"C\",\n        \"oml:data_type\":\"option\",\n        \"oml:default_value\":\"0.25\",\n        \"oml:description\":\"Set confidence threshold...\"\n      }\n    ]\n  }\n}"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a flow",
                "description": "Deletes a flow. Upon success, it returns the ID of the deleted flow.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the flow.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "ID of the deleted flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow": {
            "post": {
                "summary": "Uploads a flow",
                "consumes": [
                    "multipart/form-flow"
                ],
                "description": "Uploads a flow. Upon success, it returns the flow id.\n",
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "An XML file describing the flow",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "flow",
                        "in": "formData",
                        "description": "The actual flow, being a source (or binary) file.",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "Id of the uploaded flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/owned": {
            "get": {
                "summary": "Lists the flows owned by you",
                "description": "Returns an array with all flows owned by you.\n",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A list of flows"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/exists/{name}/{version}": {
            "get": {
                "summary": "Checks whether a flow with the given name and (external) version exists",
                "description": "Checks whether a flow with the given name and (external) version exists.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the flow.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The external version of the flow",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A list of flows"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/tag": {
            "post": {
                "summary": "Tag a flow",
                "description": "Tags a flow.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "formData",
                        "description": "Id of the flow.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the tagged flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/untag": {
            "post": {
                "summary": "Untags a flow",
                "description": "Untags a flow.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "formData",
                        "description": "Id of the flow.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the untagged flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/list/run/{ids}": {
            "get": {
                "summary": "Get runs by id(s)",
                "description": "Returns an array with all runs matching the given run id(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of run IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "A list of runs descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/list/task/{ids}": {
            "get": {
                "summary": "Get runs by task(s)",
                "description": "Returns an array with all runs belonging to one of the given task(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of task IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "A list of runs descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/list/uploader/{ids}": {
            "get": {
                "summary": "Get runs by uploader(s)",
                "description": "Returns an array with all runs uploaded by one of the given user(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of user IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "A list of runs descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/list/flow/{ids}": {
            "get": {
                "summary": "Get runs by flow(s)",
                "description": "Returns an array with all runs generated by the given flow(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of user IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "A list of runs descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/list/{filters}": {
            "get": {
                "summary": "Filter runs by id, task, uploader and or flow",
                "description": "Returns an array with all runs matching any or all of the given filters. You can combine any of the four above filters any way you want.\n",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "path",
                        "description": "Any combination of filters (run,task,uploader and/or flow) and corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or 'task/1,2,3/flow/1,2'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "A list of runs descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/{id}": {
            "get": {
                "summary": "run description",
                "description": "Returns information about a run. The information includes the name, information about the creator, dependencies, parameters, run instructions and more.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the run.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "A run description",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "run_description": {
                                    "$ref": "#/definitions/Run"
                                }
                            }
                        },
                        "examples": {
                            "application/json": "{\n  \"run\": {\n    \"oml:run_id\":\"100\",\n    \"oml:uploader\":\"1\",\n    \"oml:uploader_name\":\"Jan van Rijn\",\n    \"oml:task_id\":\"28\",\n    \"oml:task_type\":\"Supervised Classification\",\n    \"oml:task_evaluation_measure\":\"predictive_accuracy\",\n    \"oml:flow_id\":\"67\",\n    \"oml:flow_name\":\"weka.BayesNet_K2(1)\",\n    \"oml:setup_string\":\"weka.classifiers.bayes.BayesNet -- -D -Q weka.classifiers.bayes.net.search.local.K2 -- -P 1 -S BAYES -E weka.classifiers.bayes.net.estimate.SimpleEstimator -- -A 0.5\",\n    \"oml:parameter_setting\": [\n      {\n        \"oml:name\":\"D\",\n        \"oml:value\":\"true\"\n      },\n      {\n        \"oml:name\":\"Q\",\n        \"oml:value\":\"weka.classifiers.bayes.net.search.local.K2\"\n      },\n      {\n        \"oml:name\":\"P\",\n        \"oml:value\":\"1\"\n      },\n      {\n        \"oml:name\":\"S\",\n        \"oml:value\":\"BAYES\"\n      }\n    ],\n    \"oml:input_data\": \n      {\n        \"oml:dataset\":\n          {\n            \"oml:did\":\"28\",\n            \"oml:name\":\"optdigits\",\n            \"oml:url\":\"http:\\/\\/www.openml.org\\/data\\/download\\/28\\/dataset_28_optdigits.arff\"\n          }\n      },\n    \"oml:output_data\":\n      {\n        \"oml:file\": [\n          {\n            \"oml:did\":\"48838\",\n            \"oml:file_id\":\"261\",\n            \"oml:name\":\"description\",\n            \"oml:url\":\"http:\\/\\/www.openml.org\\/data\\/download\\/261\\/weka_generated_run935374685998857626.xml\"\n          },\n          { \n            \"oml:did\":\"48839\",\n            \"oml:file_id\":\"262\",\n            \"oml:name\":\"predictions\",\n            \"oml:url\":\"http:\\/\\/www.openml.org\\/data\\/download\\/262\\/weka_generated_predictions576954524972002741.arff\"\n          }\n        ],\n        \"oml:evaluation\": [\n          {\n            \"oml:name\":\"area_under_roc_curve\",\n            \"oml:flow_id\":\"4\",\n            \"oml:value\":\"0.990288\",\n            \"oml:array_data\":\"[0.99724,0.989212,0.992776,0.994279,0.980578,0.98649,0.99422,0.99727,0.994858,0.976143]\"\n          },\n          {\n            \"oml:name\":\"confusion_matrix\",\n            \"oml:flow_id\":\"10\",\n            \"oml:array_data\":\"[[544,1,0,0,7,0,1,0,0,1],[0,511,21,1,0,1,3,1,5,28],[0,7,511,1,0,1,0,3,23,11],[0,2,2,519,0,3,0,12,16,18],[0,3,0,0,528,0,4,21,6,6],[0,1,0,7,5,488,2,0,4,51],[1,7,0,0,2,0,548,0,0,0],[0,2,0,1,9,1,0,545,4,4],[1,25,2,2,3,6,2,1,503,9],[0,7,0,20,16,5,0,19,9,486]]\"\n          },\n          {\n            \"oml:name\":\"f_measure\",\n            \"oml:flow_id\":\"12\",\n            \"oml:value\":\"0.922723\",\n            \"oml:array_data\":\"[0.989091,0.898857,0.935041,0.92431,0.927944,0.918156,0.980322,0.933219,0.895018,0.826531]\"\n          },\n          {\n            \"oml:name\":\"kappa\",\n            \"oml:flow_id\":\"13\",\n            \"oml:value\":\"0.913601\"\n          }\n        ]\n      }\n  }\n}"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a run",
                "description": "Deletes a run. Upon success, it returns the ID of the deleted run.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the run.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "ID of the deleted run"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run": {
            "post": {
                "summary": "Uploads a run",
                "consumes": [
                    "multipart/form-run"
                ],
                "description": "Uploads a run. Upon success, it returns the run id.\n",
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "An XML file describing the run",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "run",
                        "in": "formData",
                        "description": "The actual run, being a source (or binary) file.",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "Id of the uploaded run"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/tag": {
            "post": {
                "summary": "Tag a run",
                "description": "Tags a run.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "formData",
                        "description": "Id of the run.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the tagged run"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/run/untag": {
            "post": {
                "summary": "Untags a run",
                "description": "Untags a run.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "formData",
                        "description": "Id of the run.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "run"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the untagged run"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/evaluation/list/run/{ids}": {
            "get": {
                "summary": "Get evaluations by run id(s)",
                "description": "Returns an array with all evaluations matching the given run id(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of run IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "evaluation"
                ],
                "responses": {
                    "200": {
                        "description": "A list of evaluation descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/evaluation/list/task/{ids}": {
            "get": {
                "summary": "Get evaluations by task(s)",
                "description": "Returns an array with all evaluations belonging to one of the given task(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of task IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "evaluation"
                ],
                "responses": {
                    "200": {
                        "description": "A list of evaluation descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/evaluation/list/uploader/{ids}": {
            "get": {
                "summary": "Get evaluations by uploader(s)",
                "description": "Returns an array with all evaluations uploaded by one of the given user(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of user IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "evaluation"
                ],
                "responses": {
                    "200": {
                        "description": "A list of evaluation descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/evaluation/list/flow/{ids}": {
            "get": {
                "summary": "Get evaluations by flow(s)",
                "description": "Returns an array with all evaluations generated by the given flow(s).\n",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of user IDs, e.g. '1,2,3'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "evaluation"
                ],
                "responses": {
                    "200": {
                        "description": "A list of evaluations descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/evaluation/list/{filters}": {
            "get": {
                "summary": "Filter evaluations by run, task, uploader and or flow",
                "description": "Returns an array with all evaluations matching any or all of the given filters. You can combine any of the four above filters any way you want.\n",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "path",
                        "description": "Any combination of filters (run,task,uploader and/or flow) and corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or 'task/1,2,3/flow/1,2'.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "evaluation"
                ],
                "responses": {
                    "200": {
                        "description": "A list of evaluations descriptions"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Flow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the flow, a positive integer"
                },
                "uploader": {
                    "type": "string",
                    "description": "The uploader of the flow"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the flow"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the flow, set by OpenML. A positive integer"
                },
                "version_label": {
                    "type": "string",
                    "description": "The version of the flow, as defined by the uploader, for reference. Can be any format as long as it is unique."
                },
                "description": {
                    "type": "string",
                    "description": "Wiki description of the flow, in (Git flavoured) markdown format"
                },
                "upload_date": {
                    "type": "string",
                    "description": "The datetime that the flow was uploaded, format yyyy-MM-dd HH:mm:ss"
                },
                "language": {
                    "type": "string",
                    "description": "The programming language the flow is written in."
                },
                "dependencies": {
                    "type": "string",
                    "description": "The libraries that this flow depends on, and their version numbers."
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags added by OpenML users. Includes study tags in the form `study_1`"
                },
                "parameter": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name of the parameter"
                        },
                        "data_type": {
                            "type": "string",
                            "description": "The data type of the parameter"
                        },
                        "default_value": {
                            "type": "string",
                            "description": "The default value of the parameter"
                        },
                        "description": {
                            "type": "string",
                            "description": "A description of the parameter"
                        }
                    }
                }
            }
        },
        "Data": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the dataset, a positive integer"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dataset"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the dataset, set by OpenML. A positive integer"
                },
                "description": {
                    "type": "string",
                    "description": "Wiki description of the dataset, in (Git flavoured) markdown format"
                },
                "format": {
                    "type": "string",
                    "description": "Data format, for instance ARFF"
                },
                "upload_date": {
                    "type": "string",
                    "description": "The datetime that the dataset was uploaded, format yyyy-MM-dd HH:mm:ss"
                },
                "licence": {
                    "type": "string",
                    "description": "The licence granted for using the dataset, for instance Public or CC-BY"
                },
                "url": {
                    "type": "string",
                    "description": "The URL where the data can be downloaded"
                },
                "file_id": {
                    "type": "string",
                    "description": "The ID of the dataset file stored on the OpenML server"
                },
                "default_target_attribute": {
                    "type": "string",
                    "description": "For tabular data, the name of the column that is typically used as the target attribute for that data set"
                },
                "version_label": {
                    "type": "string",
                    "description": "The version of the dataset, as defined by the uploader, for reference. Can be any format as long as it is unique."
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags added by OpenML users. Includes study tags in the form `study_1`"
                },
                "visibility": {
                    "type": "string",
                    "description": "Who can see the dataset. For instance `public`."
                },
                "original_data_url": {
                    "type": "string",
                    "description": "The URL where the original data is hosted."
                },
                "status": {
                    "type": "string",
                    "description": "active, in_preparation, or deactivated"
                },
                "md5_checksum": {
                    "type": "string",
                    "description": "Checksum to verify downloads of the dataset"
                }
            }
        },
        "Run": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the run, a positive integer"
                },
                "uploader": {
                    "type": "string",
                    "description": "The uploader of the run"
                },
                "uploader_name": {
                    "type": "string",
                    "description": "The name of the uploader of the run"
                },
                "task_id": {
                    "type": "string",
                    "description": "The id of the task solved by this run"
                },
                "task_type": {
                    "type": "string",
                    "description": "The type of task solved by this run (e.g., classification)"
                },
                "task_evaluation_measure": {
                    "type": "string",
                    "description": "The evaluation measure that is supposed to be optimized in the task, if any"
                },
                "flow_id": {
                    "type": "string",
                    "description": "The id of the flow used in this run"
                },
                "flow_name": {
                    "type": "string",
                    "description": "The name of the flow used in this run"
                },
                "setup_string": {
                    "type": "string",
                    "description": "Configuration of the flow as a string, to be interpreted by the flow, its library, or command line interface."
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags added by OpenML users. Includes study tags in the form `study_1`"
                },
                "parameter_setting": {
                    "type": "object",
                    "description": "Parameter settings used in this run. Can be multiple.",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name of the parameter"
                        },
                        "value": {
                            "type": "string",
                            "description": "The value of the parameter used"
                        }
                    }
                },
                "input_data": {
                    "type": "object",
                    "description": "The input data for this run.",
                    "properties": {
                        "dataset": {
                            "type": "object",
                            "properties": {
                                "did": {
                                    "type": "string",
                                    "description": "The id of the dataset"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the dataset"
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The download url of the dataset"
                                }
                            }
                        }
                    }
                },
                "output_data": {
                    "type": "object",
                    "description": "The data generated by this run.",
                    "properties": {
                        "file": {
                            "type": "object",
                            "description": "Files uploaded by the user, e.g. run description, predictions. Can be multiple.",
                            "properties": {
                                "did": {
                                    "type": "string",
                                    "description": "The id of the uploaded file"
                                },
                                "file_id": {
                                    "type": "string",
                                    "description": "The reference id of the uploaded file, for downloading afterward"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the uploaded file (e.g., description, predictions, model,...)"
                                }
                            }
                        },
                        "evaluation": {
                            "type": "object",
                            "description": "Evaluations uploaded by the user, e.g. runtimes, or computed by the server (after run upload). Can be multiple.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the evaluation measure"
                                },
                                "flow_id": {
                                    "type": "string",
                                    "description": "The id of the code used to compute this evaluation method"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The result of the evaluation"
                                },
                                "array_data": {
                                    "type": "string",
                                    "description": "For composite evaluation measures (e.g. per-class measures, confusion matrix), a string (JSON) representation of the evaluation."
                                }
                            }
                        }
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "additional_message": {
                    "type": "string"
                }
            }
        }
    }
}