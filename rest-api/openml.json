{
    "swagger": "2.0",
    "info": {
        "title": "OpenML API",
        "description": "REST API for sharing, organizing and reusing machine learning datasets, code, and experiments. Follows a predictive URL scheme from endpoint `http://www.openml.org/api_new/v1/json` (replace with xml for XML responses). An API key is required for authentication, found in your account settings after you register on [www.openml.org](www.openml.org).",
        "version": "1.0.0"
    },
    "host": "www.openml.org",
    "schemes": [
        "http"
    ],
    "basePath": "/api_new/v1/json",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/data/list": {
            "get": {
                "summary": "Lists all datasets",
                "description": "Returns an array with all datasets in the system.\n",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A dataset description"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/{id}": {
            "get": {
                "summary": "Dataset description",
                "description": "Returns information about a dataset. The information includes the name, information about the creator, URL to download it and more. \n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A dataset description",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data_set_description": {
                                    "$ref": "#/definitions/Data"
                                }
                            }
                        },
                        "examples": {
                            "application/json": "{\n  \"data_set_description\": {\n    \"oml:id\": \"1\",\n    \"oml:name\": \"anneal\",\n    \"oml:version\": \"2\",\n    \"oml:description\": \"...\",\n    \"oml:format\": \"ARFF\",\n    \"oml:upload_date\": \"2014-04-06 23:19:20\",\n    \"oml:licence\": \"Public\",\n    \"oml:url\": \"http://www.openml.org/data/download/1/dataset_1_anneal.arff\",\n    \"oml:file_id\": \"1\",\n    \"oml:default_target_attribute\": \"class\",\n    \"oml:version_label\": \"2\",\n    \"oml:tag\": [\n      \"study_1\",\n      \"uci\"\n    ],\n    \"oml:visibility\": \"public\",\n    \"oml:original_data_url\": \"http://www.openml.org/d/2\",\n    \"oml:status\": \"active\",\n    \"oml:md5_checksum\": \"d01f6ccd68c88b749b20bbe897de3713\"\n  }\n}"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a dataset",
                "description": "Deletes a dataset. Upon success, it returns the ID of the deleted dataset. \n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "ID of the deleted dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data": {
            "post": {
                "summary": "Uploads a dataset",
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Uploads a dataset. Upon success, it returns the data id. \n",
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "An XML file describing the dataset",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "dataset",
                        "in": "formData",
                        "description": "The actual dataset, being an ARFF file.",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "Id of the uploaded dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/{id}/features": {
            "get": {
                "summary": "Features, data types",
                "description": "Returns the features of a dataset. \n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A the features of the dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/{id}/qualities": {
            "get": {
                "summary": "Data qualitues, meta-features",
                "description": "Returns the qualities of a dataset. \n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A the qualities of the dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/tag": {
            "post": {
                "summary": "Tag a dataset",
                "description": "Tags a dataset.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "data_id",
                        "in": "formData",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the tagged dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/data/untag": {
            "post": {
                "summary": "Untags a dataset",
                "description": "Untags a dataset.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "data_id",
                        "in": "formData",
                        "description": "Id of the dataset.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "A the features of the dataset"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/list": {
            "get": {
                "summary": "Lists all flows",
                "description": "Returns an array with all flows in the system.\n",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A list of flows"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/{id}": {
            "get": {
                "summary": "Flow description",
                "description": "Returns information about a flow. The information includes the name, information about the creator, dependencies, parameters, run instructions and more. \n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the flow.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A flow description",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "flow_description": {
                                    "$ref": "#/definitions/Flow"
                                }
                            }
                        },
                        "examples": {
                            "application/json": "{\n  \"flow\": {\n    \"oml:id\":\"100\",\n    \"oml:uploader\":\"1\",\n    \"oml:name\":\"weka.J48\",\n    \"oml:version\":\"2\",\n    \"oml:external_version\":\"Weka_3.7.5_9117\",\n    \"oml:description\":\"...\",\n    \"oml:upload_date\":\"2014-04-23 18:00:36\",\n    \"oml:language\":\"Java\",\n    \"oml:dependencies\":\"Weka_3.7.5\",\n    \"oml:parameter\": [\n      {\n        \"oml:name\":\"A\",\n        \"oml:data_type\":\"flag\",\n        \"oml:default_value\":[],\n        \"oml:description\":\"Laplace smoothing...\"\n      },\n      {\n        \"oml:name\":\"C\",\n        \"oml:data_type\":\"option\",\n        \"oml:default_value\":\"0.25\",\n        \"oml:description\":\"Set confidence threshold...\"\n      }\n    ]\n  }\n}"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a flow",
                "description": "Deletes a flow. Upon success, it returns the ID of the deleted flow. \n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the flow.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "ID of the deleted flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow": {
            "post": {
                "summary": "Uploads a flow",
                "consumes": [
                    "multipart/form-flow"
                ],
                "description": "Uploads a flow. Upon success, it returns the flow id. \n",
                "parameters": [
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "An XML file describing the flow",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "flow",
                        "in": "formData",
                        "description": "The actual flow, being a source (or binary) file.",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "Id of the uploaded flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/owned": {
            "get": {
                "summary": "Lists the flows owned by you",
                "description": "Returns an array with all flows owned by you.\n",
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A list of flows"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/exists/{name}/{version}": {
            "get": {
                "summary": "Checks whether a flow with the given name and (external) version exists",
                "description": "Checks whether a flow with the given name and (external) version exists.\n",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the flow.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "The external version of the flow",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "query",
                        "description": "API key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "A list of flows"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/tag": {
            "post": {
                "summary": "Tag a flow",
                "description": "Tags a flow.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "formData",
                        "description": "Id of the flow.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the tagged flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/flow/untag": {
            "post": {
                "summary": "Untags a flow",
                "description": "Untags a flow.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "flow_id",
                        "in": "formData",
                        "description": "Id of the flow.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "Tag name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api_key",
                        "in": "formData",
                        "description": "Api key to authenticate the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "flow"
                ],
                "responses": {
                    "200": {
                        "description": "The id of the untagged flow"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Flow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the flow, a positive integer"
                },
                "uploader": {
                    "type": "string",
                    "description": "The uploader of the flow"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the flow"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the flow, set by OpenML. A positive integer"
                },
                "version_label": {
                    "type": "string",
                    "description": "The version of the flow, as defined by the uploader, for reference. Can be any format as long as it is unique."
                },
                "description": {
                    "type": "string",
                    "description": "Wiki description of the flow, in (Git flavoured) markdown format"
                },
                "upload_date": {
                    "type": "string",
                    "description": "The datetime that the flow was uploaded, format yyyy-MM-dd HH:mm:ss"
                },
                "language": {
                    "type": "string",
                    "description": "The programming language the flow is written in."
                },
                "dependencies": {
                    "type": "string",
                    "description": "The libraries that this flow depends on, and their version numbers."
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags added by OpenML users. Includes study tags in the form `study_1`"
                },
                "parameter": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name of the parameter"
                        },
                        "data_type": {
                            "type": "string",
                            "description": "The data type of the parameter"
                        },
                        "default_value": {
                            "type": "string",
                            "description": "The default value of the parameter"
                        },
                        "description": {
                            "type": "string",
                            "description": "A description of the parameter"
                        }
                    }
                }
            }
        },
        "Data": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the dataset, a positive integer"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dataset"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the dataset, set by OpenML. A positive integer"
                },
                "description": {
                    "type": "string",
                    "description": "Wiki description of the dataset, in (Git flavoured) markdown format"
                },
                "format": {
                    "type": "string",
                    "description": "Data format, for instance ARFF"
                },
                "upload_date": {
                    "type": "string",
                    "description": "The datetime that the dataset was uploaded, format yyyy-MM-dd HH:mm:ss"
                },
                "licence": {
                    "type": "string",
                    "description": "The licence granted for using the dataset, for instance Public or CC-BY"
                },
                "url": {
                    "type": "string",
                    "description": "The URL where the data can be downloaded"
                },
                "file_id": {
                    "type": "string",
                    "description": "The ID of the dataset file stored on the OpenML server"
                },
                "default_target_attribute": {
                    "type": "string",
                    "description": "For tabular data, the name of the column that is typically used as the target attribute for that data set"
                },
                "version_label": {
                    "type": "string",
                    "description": "The version of the dataset, as defined by the uploader, for reference. Can be any format as long as it is unique."
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags added by OpenML users. Includes study tags in the form `study_1`"
                },
                "visibility": {
                    "type": "string",
                    "description": "Who can see the dataset. For instance `public`."
                },
                "original_data_url": {
                    "type": "string",
                    "description": "The URL where the original data is hosted."
                },
                "status": {
                    "type": "string",
                    "description": "active, in_preparation, or deactivated"
                },
                "md5_checksum": {
                    "type": "string",
                    "description": "Checksum to verify downloads of the dataset"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "additional_message": {
                    "type": "string"
                }
            }
        }
    }
}