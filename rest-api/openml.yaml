swagger: '2.0'
info:
  title: OpenML API
  description: REST API for sharing, organizing and reusing machine learning datasets, code, and experiments. Follows a predictive URL scheme from endpoint http://www.openml.org/api_new/v1/json (or /xml). You need to add your `api_key` to every call (see your account settings), or simply log in.
  version: 1.0.0
host: www.openml.org
schemes:
  - http
basePath: /api_new/v1/json
produces:
  - application/json
paths:
  /data/{id}:
    get:
      summary: Get dataset description
      description: |
        Returns information about a dataset. The information includes the name, information about the creator, URL to download it and more.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A dataset description
          schema:
            $ref: '#/definitions/Data'
          examples:
            application/json: |-
              {
                "data_set_description": {
                  "oml:id": "1",
                  "oml:name": "anneal",
                  "oml:version": "2",
                  "oml:description": "...",
                  "oml:format": "ARFF",
                  "oml:upload_date": "2014-04-06 23:19:20",
                  "oml:licence": "Public",
                  "oml:url": "http://www.openml.org/data/download/1/dataset_1_anneal.arff",
                  "oml:file_id": "1",
                  "oml:default_target_attribute": "class",
                  "oml:version_label": "2",
                  "oml:tag": [
                    "study_1",
                    "uci"
                  ],
                  "oml:visibility": "public",
                  "oml:original_data_url": "http://www.openml.org/d/2",
                  "oml:status": "active",
                  "oml:md5_checksum": "d01f6ccd68c88b749b20bbe897de3713"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete dataset
      description: |
        Deletes a dataset. Upon success, it returns the ID of the deleted dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: ID of the deleted dataset
          schema:
            type: object
            properties:
              data_delete:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the deleted dataset, a positive integer   
          examples:
            application/json: |-
              {
                "data_delete": {
                  "oml:id": "4328"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data:
    post:
      summary: Upload dataset
      consumes: [multipart/form-data]
      description: |
        Uploads a dataset. Upon success, it returns the data id.
      parameters:
        - name: description
          in: formData
          description: An XML file describing the dataset. Only name, description, and data format are required. Also see the [XSD schema](https://github.com/openml/website/blob/master/openml_OS/views/pages/rest_api/xsd/openml.data.upload.xsd)
          required: true
          type: file
        - name: dataset
          in: formData
          description: The actual dataset, being an ARFF file.
          required: true
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: Id of the uploaded dataset
          schema:
            type: object
            properties:
              upload_data_set:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the uploaded dataset, a positive integer          
          examples: 
            application/json: |-
              {
                "upload_data_set": {
                  "oml:id": "4328"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/features/{id}:
    get:
      summary: Get data features
      description: |
        Returns the features of a dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: All the features of the dataset
          schema:
            $ref: '#/definitions/DataFeatures'
          examples:
            application/json: |-
              {
                "data_features": {
                  "oml:feature": [
                    {
                      "oml:index": "0",
                      "oml:name": "sepallength",
                      "oml:data_type": "numeric",
                      "oml:is_target": "false",
                      "oml:is_ignore": "false",
                      "oml:is_row_identifier": "false"
                    },
                    {
                      "oml:index": "1",
                      "oml:name": "sepalwidth",
                      "oml:data_type": "numeric",
                      "oml:is_target": "false",
                      "oml:is_ignore": "false",
                      "oml:is_row_identifier": "false"
                    },
                    {
                      "oml:index": "2",
                      "oml:name": "petallength",
                      "oml:data_type": "numeric",
                      "oml:is_target": "false",
                      "oml:is_ignore": "false",
                      "oml:is_row_identifier": "false"
                    },
                    {
                      "oml:index": "3",
                      "oml:name": "petalwidth",
                      "oml:data_type": "numeric",
                      "oml:is_target": "false",
                      "oml:is_ignore": "false",
                      "oml:is_row_identifier": "false"
                    },
                    {
                      "oml:index": "4",
                      "oml:name": "class",
                      "oml:data_type": "nominal",
                      "oml:is_target": "true",
                      "oml:is_ignore": "false",
                      "oml:is_row_identifier": "false"
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/qualities/{id}:
    get:
      summary: Get data qualities
      description: |
        Returns the qualities of a dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: All the qualities of the dataset
          schema:
            $ref: '#/definitions/DataQualities'
          examples:
            application/json: |-
              {
                "data_qualities": {
                  "oml:quality": [
                    {
                      "oml:name": "ClassCount",
                      "oml:value": "3.0"
                    },
                    {
                      "oml:name": "ClassEntropy",
                      "oml:value": "1.584962500721156"
                    },
                    {
                      "oml:name": "NumberOfClasses",
                      "oml:value": "3"
                    },
                    {
                      "oml:name": "NumberOfFeatures",
                      "oml:value": "5"
                    },
                    {
                      "oml:name": "NumberOfInstances",
                      "oml:value": "150"
                    },
                    {
                      "oml:name": "NumberOfInstancesWithMissingValues",
                      "oml:value": "0"
                    },
                    {
                      "oml:name": "NumberOfMissingValues",
                      "oml:value": "0"
                    },
                    {
                      "oml:name": "NumberOfNumericFeatures",
                      "oml:value": "4"
                    },
                    {
                      "oml:name": "NumberOfSymbolicFeatures",
                      "oml:value": "0"
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/list:
    get:
      summary: List all datasets
      description: |
        Returns an array with all datasets in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A dataset description
          schema:
            $ref: '#/definitions/DataList'
          examples: 
            application/json: |-
              {
                "data": {
                  "oml:dataset": [
                    {
                      "oml:did":"1",
                      "oml:name":"anneal",
                      "oml:status":"active",
                      "oml:quality":[
                        {
                          "@name":"MajorityClassSize",
                          "$":"684"
                        },
                        {
                          "@name":"MaxNominalAttDistinctValues",
                          "$":"10.0"
                        },
                        {
                          "@name":"MinorityClassSize"
                          ,"$":"0"
                        },
                        {
                          "@name":"NumBinaryAtts",
                          "$":"14.0"
                        },
                        {
                          "@name":"NumberOfClasses",
                          "$":"6"
                        },
                        {
                          "@name":"NumberOfFeatures",
                          "$":"39"
                        },
                        {
                          "@name":"NumberOfInstances",
                          "$":"898"
                        },
                        {
                          "@name":"NumberOfInstancesWithMissingValues",
                          "$":"0"
                        },
                        {
                          "@name":"NumberOfMissingValues",
                          "$":"0"
                        },
                        {
                          "@name":"NumberOfNumericFeatures",
                          "$":"6"
                        },
                        {
                          "@name":"NumberOfSymbolicFeatures",
                          "$":"32"
                        }
                      ]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/tag:
    post:
      summary: Tag a dataset
      description: Tags a dataset.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: data_id
          in: formData
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: The id of the tagged dataset
          schema:
            type: object
            properties:
              data_tag:
                type: object
                properties:
                  id: 
                    type: string
                    description: ID of the tagged dataset
          examples:
            application/json: |-
              {
                "data_tag": {
                  "oml:id": "2"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/untag:
    post:
      summary: Untag a dataset
      description: Untags a dataset.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: data_id
          in: formData
          description: Id of the dataset.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A the features of the dataset
          schema:
            type: object
            properties:
              data_untag:
                type: object
                properties:
                  id: 
                    type: string
                    description: ID of the untagged dataset
          examples:
            application/json: |-
              {
                "data_untag": {
                  "oml:id": "2"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/{id}:
    get:
      summary: Get flow description
      description: |
        Returns information about a flow. The information includes the name, information about the creator, dependencies, parameters, run instructions and more.
      parameters:
        - name: id
          in: path
          description: ID of the flow.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A flow description
          schema:
            $ref: '#/definitions/Flow'
          examples:
            application/json: |-
              {
                "flow": {
                  "oml:id":"100",
                  "oml:uploader":"1",
                  "oml:name":"weka.J48",
                  "oml:version":"2",
                  "oml:external_version":"Weka_3.7.5_9117",
                  "oml:description":"...",
                  "oml:upload_date":"2014-04-23 18:00:36",
                  "oml:language":"Java",
                  "oml:dependencies":"Weka_3.7.5",
                  "oml:parameter": [
                    {
                      "oml:name":"A",
                      "oml:data_type":"flag",
                      "oml:default_value":[],
                      "oml:description":"Laplace smoothing..."
                    },
                    {
                      "oml:name":"C",
                      "oml:data_type":"option",
                      "oml:default_value":"0.25",
                      "oml:description":"Set confidence threshold..."
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a flow
      description: |
        Deletes a flow. Upon success, it returns the ID of the deleted flow.
      parameters:
        - name: id
          in: path
          description: Id of the flow.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: ID of the deleted flow
          schema:
            type: object
            properties:
              flow_delete:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the deleted flow, a positive integer  
          examples: 
            application/json: |-
              {
                "flow_delete": {
                  "oml:id": "4328"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow:
    post:
      summary: Upload a flow
      consumes: [multipart/form-flow]
      description: |
        Uploads a flow. Upon success, it returns the flow id.
      parameters:
        - name: description
          in: formData
          description: An XML file describing the flow. Only name and description are required. Also see the [XSD schema](https://github.com/openml/website/blob/master/openml_OS/views/pages/rest_api/xsd/openml.implementation.upload.xsd)
          required: true
          type: file
        - name: flow
          in: formData
          description: The actual flow, being a source (or binary) file.
          required: false
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: Id of the uploaded flow
          schema:
            type: object
            properties:
              upload_flow:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the uploaded flow, a positive integer  
          examples:
            application/json: |-
              {
                "upload_flow": {
                  "oml:id": "2520"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/exists/{name}/{version}:
    get:
      summary: Check whether flow exists
      description: |
        Checks whether a flow with the given name and (external) version exists.
      parameters:
        - name: name
          in: path
          description: The name of the flow.
          required: true
          type: string
        - name: version
          in: path
          description: The external version of the flow
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
          schema:
            type: object
            properties:
              flow_exists:
                type: object
                properties:
                  exists:
                    type: string
                    description: true or false
                  id:
                    type: string
                    description: The id of the flow with the given name and (external) version
          examples:
            application/json: |-
              {
                "flow_exists": {
                  "oml:exists": "true",
                  "oml:id": "65"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/list:
    get:
      summary: List all flows
      description: |
        Returns an array with all flows in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
          schema:
            $ref: '#/definitions/FlowList'
          examples:
            application/json: |-
              {
                "flows":
                  {
                    "oml:flow":[
                      {
                        "oml:id":"65",
                        "oml:full_name":"weka.RandomForest(1)",
                        "oml:name":"weka.RandomForest",
                        "oml:version":"1",
                        "oml:external_version":"Weka_3.7.10_9186",
                        "oml:uploader":"1"
                      },
                      {
                        "oml:id":"66",
                        "oml:full_name":"weka.IBk(1)",
                        "oml:name":"weka.IBk",
                        "oml:version":"1",
                        "oml:external_version":"Weka_3.7.10_8034",
                        "oml:uploader":"1"
                      },
                      {
                        "oml:id":"67",
                        "oml:full_name":"weka.BayesNet_K2(1)",
                        "oml:name":"weka.BayesNet_K2",
                        "oml:version":"1",
                        "oml:external_version":"Weka_3.7.10_8034",
                        "oml:uploader":"1"
                      }
                    ]
                  }
                }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/owned:
    get:
      summary: List flows owned by you
      description: |
        Returns an array with all flows owned by you.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
          schema:
            type: object
            properties:
              flow_owned:
                type: object
                properties:
                  id:
                    type: array
                    items:
                      type: string
          examples:
            application/json: |-
              {
                "flow_owned": {
                  "oml:id": [
                    "111",
                    "112",
                    "113",
                    "114",
                    "115",
                    "116",
                    "117"
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/tag:
    post:
      summary: Tag a flow
      description: Tags a flow.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: flow_id
          in: formData
          description: Id of the flow.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: The id of the tagged flow
          schema:
            type: object
            properties:
              flow_tag:
                type: object
                properties:
                  id: 
                    type: string
                    description: ID of the tagged flow
          examples:
            application/json: |-
              {
                "flow_tag": {
                  "oml:id": "2"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/untag:
    post:
      summary: Untag a flow
      description: Untags a flow.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: flow_id
          in: formData
          description: Id of the flow.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: The id of the untagged flow
          schema:
            type: object
            properties:
              flow_untag:
                type: object
                properties:
                  id: 
                    type: string
                    description: ID of the untagged flow
          examples:
            application/json: |-
              {
                "flow_untag": {
                  "oml:id": "2"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/{id}:
    get:
      summary: Get run description
      description: |
        Returns information about a run. The information includes the name, information about the creator, dependencies, parameters, run instructions and more.
      parameters:
        - name: id
          in: path
          description: ID of the run.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A run description
          schema:
            $ref: '#/definitions/Run'
          examples:
            application/json: |-
              {
                "run": {
                  "oml:run_id":"100",
                  "oml:uploader":"1",
                  "oml:uploader_name":"Jan van Rijn",
                  "oml:task_id":"28",
                  "oml:task_type":"Supervised Classification",
                  "oml:task_evaluation_measure":"predictive_accuracy",
                  "oml:flow_id":"67",
                  "oml:flow_name":"weka.BayesNet_K2(1)",
                  "oml:setup_string":"weka.classifiers.bayes.BayesNet -- -D -Q weka.classifiers.bayes.net.search.local.K2 -- -P 1 -S BAYES -E weka.classifiers.bayes.net.estimate.SimpleEstimator -- -A 0.5",
                  "oml:parameter_setting": [
                    {
                      "oml:name":"D",
                      "oml:value":"true"
                    },
                    {
                      "oml:name":"Q",
                      "oml:value":"weka.classifiers.bayes.net.search.local.K2"
                    },
                    {
                      "oml:name":"P",
                      "oml:value":"1"
                    },
                    {
                      "oml:name":"S",
                      "oml:value":"BAYES"
                    }
                  ],
                  "oml:input_data": 
                    {
                      "oml:dataset":
                        {
                          "oml:did":"28",
                          "oml:name":"optdigits",
                          "oml:url":"http:\/\/www.openml.org\/data\/download\/28\/dataset_28_optdigits.arff"
                        }
                    },
                  "oml:output_data":
                    {
                      "oml:file": [
                        {
                          "oml:did":"48838",
                          "oml:file_id":"261",
                          "oml:name":"description",
                          "oml:url":"http:\/\/www.openml.org\/data\/download\/261\/weka_generated_run935374685998857626.xml"
                        },
                        { 
                          "oml:did":"48839",
                          "oml:file_id":"262",
                          "oml:name":"predictions",
                          "oml:url":"http:\/\/www.openml.org\/data\/download\/262\/weka_generated_predictions576954524972002741.arff"
                        }
                      ],
                      "oml:evaluation": [
                        {
                          "oml:name":"area_under_roc_curve",
                          "oml:flow_id":"4",
                          "oml:value":"0.990288",
                          "oml:array_data":"[0.99724,0.989212,0.992776,0.994279,0.980578,0.98649,0.99422,0.99727,0.994858,0.976143]"
                        },
                        {
                          "oml:name":"confusion_matrix",
                          "oml:flow_id":"10",
                          "oml:array_data":"[[544,1,0,0,7,0,1,0,0,1],[0,511,21,1,0,1,3,1,5,28],[0,7,511,1,0,1,0,3,23,11],[0,2,2,519,0,3,0,12,16,18],[0,3,0,0,528,0,4,21,6,6],[0,1,0,7,5,488,2,0,4,51],[1,7,0,0,2,0,548,0,0,0],[0,2,0,1,9,1,0,545,4,4],[1,25,2,2,3,6,2,1,503,9],[0,7,0,20,16,5,0,19,9,486]]"
                        },
                        {
                          "oml:name":"f_measure",
                          "oml:flow_id":"12",
                          "oml:value":"0.922723",
                          "oml:array_data":"[0.989091,0.898857,0.935041,0.92431,0.927944,0.918156,0.980322,0.933219,0.895018,0.826531]"
                        },
                        {
                          "oml:name":"kappa",
                          "oml:flow_id":"13",
                          "oml:value":"0.913601"
                        }
                      ]
                    }
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete run
      description: |
        Deletes a run. Upon success, it returns the ID of the deleted run.
      parameters:
        - name: id
          in: path
          description: Id of the run.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: ID of the deleted run
          schema:
            type: object
            properties:
              data_delete:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the deleted run, a positive integer
          examples:
            application/json: |-
              {
                "run_delete": {
                  "oml:id": "2520"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run:
    post:
      summary: Upload run
      consumes: [multipart/form-run]
      description: |
        Uploads a run. Upon success, it returns the run id.
      parameters:
        - name: description
          in: formData
          description: An XML file describing the run
          required: true
          type: file
        - name: output_files
          in: formData
          description: The output files generated by the run, such as predictions or model descriptions
          required: false
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: Id of the uploaded run
          schema:
            type: object
            properties:
              upload_flow:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the uploaded run, a positive integer
          examples:
            application/json: |-
              {
                "upload_run": {
                  "oml:id": "2520"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/run/{ids}:
    get:
      summary: Get runs by id(s)
      description: | 
        Returns an array with all runs matching the given run id(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of run IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              {
                "runs": {
                  "oml:run": [
                    {
                      "oml:run_id": "100",
                      "oml:task_id": "28",
                      "oml:setup_id": "12",
                      "oml:flow_id": "67",
                      "oml:uploader": "1",
                      "oml:error_message": []
                    },
                    {
                      "oml:run_id": "101",
                      "oml:task_id": "48",
                      "oml:setup_id": "6",
                      "oml:flow_id": "61",
                      "oml:uploader": "1",
                      "oml:error_message": []
                    },
                    {
                      "oml:run_id": "102",
                      "oml:task_id": "41",
                      "oml:setup_id": "3",
                      "oml:flow_id": "58",
                      "oml:uploader": "1",
                      "oml:error_message": []
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/task/{ids}:
    get:
      summary: Get runs by task(s)
      description: | 
        Returns an array with all runs belonging to one of the given task(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of task IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              {
                "runs": {
                  "oml:run": [
                    {
                      "oml:run_id": "142564",
                      "oml:task_id": "1",
                      "oml:setup_id": "829",
                      "oml:flow_id": "362",
                      "oml:uploader": "212",
                      "oml:error_message": []
                    },
                    {
                      "oml:run_id": "249273",
                      "oml:task_id": "1",
                      "oml:setup_id": "829",
                      "oml:flow_id": "362",
                      "oml:uploader": "348",
                      "oml:error_message": []
                    },
                    {
                      "oml:run_id": "249280",
                      "oml:task_id": "1",
                      "oml:setup_id": "829",
                      "oml:flow_id": "362",
                      "oml:uploader": "348",
                      "oml:error_message": []
                    },
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/uploader/{ids}:
    get:
      summary: Get runs by uploader(s)
      description: | 
        Returns an array with all runs uploaded by one of the given user(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              {
                "runs": {
                  "oml:run": [
                    {
                      "oml:run_id":"45015",
                      "oml:task_id":"1",
                      "oml:setup_id":"1225",
                      "oml:flow_id":"673",
                      "oml:uploader":"1",
                      "oml:error_message":[]
                    },
                    {
                      "oml:run_id":"45016",
                      "oml:task_id":"1",
                      "oml:setup_id":"1225",
                      "oml:flow_id":"673",
                      "oml:uploader":"1",
                      "oml:error_message":[]
                    },
                    {
                      "oml:run_id":"54729",
                      "oml:task_id":"1",
                      "oml:setup_id":"1468",
                      "oml:flow_id":"707",
                      "oml:uploader":"1",
                      "oml:error_message":[]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/flow/{ids}:
    get:
      summary: Get runs by flow(s)
      description: | 
        Returns an array with all runs generated by the given flow(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              {
                "runs": {
                  "oml:run": [
                    {
                      "oml:run_id":"413",
                      "oml:task_id":"1",
                      "oml:setup_id":"10",
                      "oml:flow_id":"65",
                      "oml:uploader":"1",
                      "oml:error_message":[]
                    },
                    {
                      "oml:run_id":"6253",
                      "oml:task_id":"1",
                      "oml:setup_id":"10",
                      "oml:flow_id":"65",
                      "oml:uploader":"17",
                      "oml:error_message":[]
                    },
                    {
                      "oml:run_id":"10451",
                      "oml:task_id":"1",
                      "oml:setup_id":"79",
                      "oml:flow_id":"65",
                      "oml:uploader":"17",
                      "oml:error_message":[]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/{filters}:
    get:
      summary: Get runs by id, task, uploader and/or flow
      description: | 
        Returns an array with all runs matching any or all of the given filters. You can combine any of the four above filters any way you want.
      parameters:
        - name: filters
          in: path
          description: Any combination of filters (run,task,uploader and/or flow) and corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or 'task/1,2,3/flow/1,2'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              {
                "runs": {
                  "oml:run": [
                    {
                      "oml:run_id": "100",
                      "oml:task_id": "28",
                      "oml:setup_id": "12",
                      "oml:flow_id": "67",
                      "oml:uploader": "1",
                      "oml:error_message": []
                    },
                    {
                      "oml:run_id": "101",
                      "oml:task_id": "48",
                      "oml:setup_id": "6",
                      "oml:flow_id": "61",
                      "oml:uploader": "1",
                      "oml:error_message": []
                    },
                    {
                      "oml:run_id": "102",
                      "oml:task_id": "41",
                      "oml:setup_id": "3",
                      "oml:flow_id": "58",
                      "oml:uploader": "1",
                      "oml:error_message": []
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/tag:
    post:
      summary: Tag a run
      description: Tags a run.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: run_id
          in: formData
          description: Id of the run.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: The id of the tagged run
          schema:
            type: object
            properties:
              run_tag:
                type: object
                properties:
                  id: 
                    type: string
                    description: ID of the tagged run
          examples:
            application/json: |-
              {
                "run_tag": {
                  "oml:id": "2"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/untag:
    post:
      summary: Untag a run
      description: Untags a run.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: run_id
          in: formData
          description: Id of the run.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: The id of the untagged run
          schema:
            type: object
            properties:
              run_untag:
                type: object
                properties:
                  id: 
                    type: string
                    description: ID of the untagged run
          examples:
            application/json: |-
              {
                "run_untag": {
                  "oml:id": "2"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/run/{ids}:
    get:
      summary: Get evaluations by run id(s)
      description: | 
        Returns an array with all evaluations matching the given run id(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of run IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              {
                "evaluations": {
                  "oml:evaluation": [
                    {
                      "oml:run_id":"1",
                      "oml:function":"area_under_roc_curve",
                      "oml:value":"0.839359",
                      "oml:array_data":"[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"f_measure",
                      "oml:value":"0.600026",
                      "oml:array_data":"[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"predictive_accuracy",
                      "oml:value":"0.614634",
                      "oml:array_data":[]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/task/{ids}:
    get:
      summary: Get evaluations by task(s)
      description: | 
        Returns an array with all evaluations belonging to one of the given task(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of task IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              {
                "evaluations": {
                  "oml:evaluation": [
                    {
                      "oml:run_id":"1",
                      "oml:function":"area_under_roc_curve",
                      "oml:value":"0.839359",
                      "oml:array_data":"[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"f_measure",
                      "oml:value":"0.600026",
                      "oml:array_data":"[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"predictive_accuracy",
                      "oml:value":"0.614634",
                      "oml:array_data":[]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/uploader/{ids}:
    get:
      summary: Get evaluations by uploader(s)
      description: | 
        Returns an array with all evaluations uploaded by one of the given user(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              {
                "evaluations": {
                  "oml:evaluation": [
                    {
                      "oml:run_id":"1",
                      "oml:function":"area_under_roc_curve",
                      "oml:value":"0.839359",
                      "oml:array_data":"[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"f_measure",
                      "oml:value":"0.600026",
                      "oml:array_data":"[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"predictive_accuracy",
                      "oml:value":"0.614634",
                      "oml:array_data":[]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/flow/{ids}:
    get:
      summary: Get evaluations by flow(s)
      description: | 
        Returns an array with all evaluations generated by the given flow(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              {
                "evaluations": {
                  "oml:evaluation": [
                    {
                      "oml:run_id":"1",
                      "oml:function":"area_under_roc_curve",
                      "oml:value":"0.839359",
                      "oml:array_data":"[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"f_measure",
                      "oml:value":"0.600026",
                      "oml:array_data":"[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"predictive_accuracy",
                      "oml:value":"0.614634",
                      "oml:array_data":[]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/{filters}:
    get:
      summary: Get evaluations by run, task, uploader and or flow
      description: | 
        Returns an array with all evaluations matching any or all of the given filters. You can combine any of the four above filters any way you want.
      parameters:
        - name: filters
          in: path
          description: Any combination of filters (run,task,uploader and/or flow) and corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or 'task/1,2,3/flow/1,2'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              {
                "evaluations": {
                  "oml:evaluation": [
                    {
                      "oml:run_id":"1",
                      "oml:function":"area_under_roc_curve",
                      "oml:value":"0.839359",
                      "oml:array_data":"[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"f_measure",
                      "oml:value":"0.600026",
                      "oml:array_data":"[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]"
                    },
                    {
                      "oml:run_id":"1",
                      "oml:function":"predictive_accuracy",
                      "oml:value":"0.614634",
                      "oml:array_data":[]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Flow:
    type: object
    properties:
      flow_description:
        type: object
        properties:
          id:
            type: string
            description: ID of the flow, a positive integer
          uploader:
            type: string
            description: The uploader of the flow
          name:
            type: string
            description: The name of the flow
          version:
            type: string
            description: The version of the flow, set by OpenML. A positive integer
          version_label:
            type: string
            description: The version of the flow, as defined by the uploader, for reference. Can be any format as long as it is unique.
          description:
            type: string
            description: Wiki description of the flow, in (Git flavoured) markdown format
          upload_date:
            type: string
            description: The datetime that the flow was uploaded, format yyyy-MM-dd HH:mm:ss
          language:
            type: string
            description: The programming language the flow is written in.
          dependencies:
            type: string
            description: The libraries that this flow depends on, and their version numbers.
          tag:
            type: array
            items:
              type: string
            description: Tags added by OpenML users. Includes study tags in the form `study_1`
          parameter:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the parameter
                data_type:
                  type: string
                  description: The data type of the parameter
                default_value:
                  type: string
                  description: The default value of the parameter
                description:
                  type: string
                  description: A description of the parameter
  FlowList:
    type: object
    properties:
      flows:
        type: object
        properties:
          flow:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The flow ID
                full_name:
                  type: string
                  description: The full flow name (name + internal version number)   
                name:
                  type: string
                  description: The flow name    
                version:
                  type: string
                  description: The internal flow version
                external_version:
                  type: string
                  description: The external flow version
                uploader:
                  type: string
                  description: The ID of the person who uploaded the flow
  DataList:
    type: object
    properties:
      data:
        type: object
        properties:
          dataset:
            type: array
            items:
              type: object
              properties:
                did:
                  type: string
                  description: The dataset ID
                name:
                  type: string
                  description: The dataset name    
                status:
                  type: string
                  description: The dataset status, either in_preparation, active, or deactivated
                quality:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the property
                      value:
                        type: string
                        description: The value of the property
  DataQualities:
    type: object
    properties:
      data_qualities:
        type: object
        properties:
          quality:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the dataset quality measures
                value:
                  type: string
                  description: The value for this dataset
  DataFeatures:
    type: object
    properties:
      data_features:
        type: object
        properties:
          feature:
            type: array
            items:
              type: object
              properties:
                index:
                  type: string
                  description: Feature index
                name:
                  type: string
                  description: Feature name
                data_type:
                  type: string
                  description: Feature data type
                is_target:
                  type: string
                  description: Whether this feature is seen as a target feature
                is_ignore:
                  type: string
                  description: Whether this feature should be ignored in modelling (e.g. every value is unique)
                is_row_identifier:
                  type: string
                  description: Whether this feature is a row identifier
  Data:
    type: object
    properties:
      data_set_description:
        type: object
        required: [ "name", "description", "format" ]
        properties:
          id:
            type: string
            description: ID of the dataset, a positive integer
          name:
            type: string
            description: The name of the dataset
          version:
            type: string
            description: The version of the dataset, set by OpenML. A positive integer
          description:
            type: string
            description: Wiki description of the dataset, in (Git flavoured) markdown format
          format:
            type: string
            description: Data format, for instance ARFF
          upload_date:
            type: string
            description: The datetime that the dataset was uploaded, format yyyy-MM-dd HH:mm:ss
          licence:
            type: string
            description: The licence granted for using the dataset, for instance Public or CC-BY
          url:
            type: string
            description: The URL where the data can be downloaded
          file_id:
            type: string
            description: The ID of the dataset file stored on the OpenML server
          default_target_attribute:
            type: string
            description: For tabular data, the name of the column that is typically used as the target attribute for that data set
          version_label:
            type: string
            description: The version of the dataset, as defined by the uploader, for reference. Can be any format as long as it is unique.
          tag:
            type: array
            items:
              type: string
            description: Tags added by OpenML users. Includes study tags in the form `study_1`
          visibility:
            type: string
            description: Who can see the dataset. For instance `public`.
          original_data_url:
            type: string
            description: The URL where the original data is hosted.
          status:
            type: string
            description: active, in_preparation, or deactivated
          md5_checksum:
            type: string
            description: Checksum to verify downloads of the dataset
  RunList:
    type: object
    properties:
      runs:
        type: object
        properties:
          run:
            type: array
            items:
              type: object
              properties:
                run_id:
                  type: string
                  description: The run ID
                task_id:
                  type: string
                  description: The ID of the task solved by this run    
                setup_id:
                  type: string
                  description: Ignore (internal representation of the parameter setting)
                flow_id:
                  type: string
                  description: The ID of the flow used in this run
                uploader:
                  type: string
                  description: The ID of the person uploading this run    
                error_message:
                  type: string
                  description: Error message generated by the run (if any)
  EvaluationList:
      type: object
      properties:
        evaluations:
          type: object
          properties:
            evaluation:
              type: array
              items:
                type: object
                properties:
                  run_id:
                    type: string
                    description: The run ID
                  function:
                    type: string
                    description: The name of the evaluation function    
                  value:
                    type: string
                    description: The outcome of the evaluation
                  array_data:
                    type: string
                    description: For structured evaluation measures, an array of evaluation values (e.g. per-class predictions, evaluation matrices,...)
  Run:
    type: object
    properties:
      run_description:
        type: object
        properties:
          id:
            type: string
            description: ID of the run, a positive integer
          uploader:
            type: string
            description: The uploader of the run
          uploader_name:
            type: string
            description: The name of the uploader of the run
          task_id:
            type: string
            description: The id of the task solved by this run
          task_type:
            type: string
            description: The type of task solved by this run (e.g., classification)
          task_evaluation_measure:
            type: string
            description: The evaluation measure that is supposed to be optimized in the task, if any
          flow_id:
            type: string
            description: The id of the flow used in this run
          flow_name:
            type: string
            description: The name of the flow used in this run
          setup_string:
            type: string
            description: Configuration of the flow as a string, to be interpreted by the flow, its library, or command line interface. 
          tag:
            type: array
            items:
              type: string
            description: Tags added by OpenML users. Includes study tags in the form `study_1`
          parameter_setting:
            type: array
            items:
              type: object
              description: Parameter settings used in this run. Can be multiple. 
              properties:
                name:
                  type: string
                  description: The name of the parameter
                value:
                  type: string
                  description: The value of the parameter used
          input_data:
            type: object
            description: The input data for this run. 
            properties:
              dataset:
                type: object    
                properties:
                  did:
                    type: string
                    description: The id of the dataset
                  name:
                    type: string
                    description: The name of the dataset
                  url:
                    type: string
                    description: The download url of the dataset
          output_data:
            type: object
            description: The data generated by this run. 
            properties: 
              file:
                type: array
                items:
                  type: object    
                  description: Files uploaded by the user, e.g. run description, predictions. Can be multiple. 
                  properties:
                    did:
                      type: string
                      description: The id of the uploaded file
                    file_id:
                      type: string
                      description: The reference id of the uploaded file, for downloading afterward
                    name:
                      type: string
                      description: The name of the uploaded file (e.g., description, predictions, model,...)
              evaluation:
                type: array
                items:
                  type: object   
                  description: Evaluations uploaded by the user, e.g. runtimes, or computed by the server (after run upload). Can be multiple. 
                  properties:
                    name:
                      type: string
                      description: The name of the evaluation measure
                    flow_id:
                      type: string
                      description: The id of the code used to compute this evaluation method
                    value:
                      type: string
                      description: The result of the evaluation
                    array_data:
                      type: string
                      description: For composite evaluation measures (e.g. per-class measures, confusion matrix), a string (JSON) representation of the evaluation.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      additional_message:
        type: string
