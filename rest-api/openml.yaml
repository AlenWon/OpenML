swagger: '2.0'
info:
  title: OpenML API
  description: REST API for sharing, organizing and reusing machine learning datasets, code, and experiments. Follows a predictive URL scheme from endpoint http://www.openml.org/api_new/v1/json (or /xml). You need to add your `api_key` to every call (see your account settings), or simply log in.
  version: 1.0.0
host: www.openml.org
schemes:
  - http
basePath: /api_new/v1/json
produces:
  - application/json
paths:
  /data/list:
    get:
      summary: Lists all datasets
      description: |
        Returns an array with all datasets in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A dataset description
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/{id}:
    get:
      summary: Dataset description
      description: |
        Returns information about a dataset. The information includes the name, information about the creator, URL to download it and more.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A dataset description
          schema:
            type: object
            properties:
              data_set_description:
                $ref: '#/definitions/Data'
          examples:
            application/json: |-
              {
                "data_set_description": {
                  "oml:id": "1",
                  "oml:name": "anneal",
                  "oml:version": "2",
                  "oml:description": "...",
                  "oml:format": "ARFF",
                  "oml:upload_date": "2014-04-06 23:19:20",
                  "oml:licence": "Public",
                  "oml:url": "http://www.openml.org/data/download/1/dataset_1_anneal.arff",
                  "oml:file_id": "1",
                  "oml:default_target_attribute": "class",
                  "oml:version_label": "2",
                  "oml:tag": [
                    "study_1",
                    "uci"
                  ],
                  "oml:visibility": "public",
                  "oml:original_data_url": "http://www.openml.org/d/2",
                  "oml:status": "active",
                  "oml:md5_checksum": "d01f6ccd68c88b749b20bbe897de3713"
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes a dataset
      description: |
        Deletes a dataset. Upon success, it returns the ID of the deleted dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: ID of the deleted dataset
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data:
    post:
      summary: Uploads a dataset
      consumes: [multipart/form-data]
      description: |
        Uploads a dataset. Upon success, it returns the data id.
      parameters:
        - name: description
          in: formData
          description: An XML file describing the dataset
          required: true
          type: file
        - name: dataset
          in: formData
          description: The actual dataset, being an ARFF file.
          required: true
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: Id of the uploaded dataset
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/{id}/features:
    get:
      summary: Features, data types
      description: |
        Returns the features of a dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A the features of the dataset
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/{id}/qualities:
    get:
      summary: Data qualitues, meta-features
      description: |
        Returns the qualities of a dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A the qualities of the dataset
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/tag:
    post:
      summary: Tag a dataset
      description: Tags a dataset.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: data_id
          in: formData
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: The id of the tagged dataset
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /data/untag:
    post:
      summary: Untags a dataset
      description: Untags a dataset.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: data_id
          in: formData
          description: Id of the dataset.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A the features of the dataset
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/list:
    get:
      summary: Lists all flows
      description: |
        Returns an array with all flows in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/{id}:
    get:
      summary: Flow description
      description: |
        Returns information about a flow. The information includes the name, information about the creator, dependencies, parameters, run instructions and more.
      parameters:
        - name: id
          in: path
          description: ID of the flow.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A flow description
          schema:
            type: object
            properties:
              flow_description:
                $ref: '#/definitions/Flow'
          examples:
            application/json: |-
              {
                "flow": {
                  "oml:id":"100",
                  "oml:uploader":"1",
                  "oml:name":"weka.J48",
                  "oml:version":"2",
                  "oml:external_version":"Weka_3.7.5_9117",
                  "oml:description":"...",
                  "oml:upload_date":"2014-04-23 18:00:36",
                  "oml:language":"Java",
                  "oml:dependencies":"Weka_3.7.5",
                  "oml:parameter": [
                    {
                      "oml:name":"A",
                      "oml:data_type":"flag",
                      "oml:default_value":[],
                      "oml:description":"Laplace smoothing..."
                    },
                    {
                      "oml:name":"C",
                      "oml:data_type":"option",
                      "oml:default_value":"0.25",
                      "oml:description":"Set confidence threshold..."
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes a flow
      description: |
        Deletes a flow. Upon success, it returns the ID of the deleted flow.
      parameters:
        - name: id
          in: path
          description: Id of the flow.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: ID of the deleted flow
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow:
    post:
      summary: Uploads a flow
      consumes: [multipart/form-flow]
      description: |
        Uploads a flow. Upon success, it returns the flow id.
      parameters:
        - name: description
          in: formData
          description: An XML file describing the flow
          required: true
          type: file
        - name: flow
          in: formData
          description: The actual flow, being a source (or binary) file.
          required: false
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: Id of the uploaded flow
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/owned:
    get:
      summary: Lists the flows owned by you
      description: |
        Returns an array with all flows owned by you.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/exists/{name}/{version}:
    get:
      summary: Checks whether a flow with the given name and (external) version exists
      description: |
        Checks whether a flow with the given name and (external) version exists.
      parameters:
        - name: name
          in: path
          description: The name of the flow.
          required: true
          type: string
        - name: version
          in: path
          description: The external version of the flow
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/tag:
    post:
      summary: Tag a flow
      description: Tags a flow.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: flow_id
          in: formData
          description: Id of the flow.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: The id of the tagged flow
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /flow/untag:
    post:
      summary: Untags a flow
      description: Untags a flow.
      consumes: [application/x-www-form-urlencoded]
      parameters:
        - name: flow_id
          in: formData
          description: Id of the flow.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: The id of the untagged flow
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/run/{ids}:
    get:
      summary: Get runs by id(s)
      description: |
        Returns an array with all runs matching the given run id(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of run IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/task/{ids}:
    get:
      summary: Get runs by task(s)
      description: |
        Returns an array with all runs belonging to one of the given task(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of task IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/uploader/{ids}:
    get:
      summary: Get runs by uploader(s)
      description: |
        Returns an array with all runs uploaded by one of the given user(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/flow/{ids}:
    get:
      summary: Get runs by flow(s)
      description: |
        Returns an array with all runs generated by the given flow(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /run/list/{filters}:
    get:
      summary: Filter runs by id, task, uploader and or flow
      description: |
        Returns an array with all runs matching any or all of the given filters. You can combine any of the four above filters any way you want.
      parameters:
        - name: filters
          in: path
          description: Any combination of filters (run,task,uploader and/or flow) and corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or 'task/1,2,3/flow/1,2'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/run/{ids}:
    get:
      summary: Get evaluations by run id(s)
      description: |
        Returns an array with all evaluations matching the given run id(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of run IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/task/{ids}:
    get:
      summary: Get evaluations by task(s)
      description: |
        Returns an array with all evaluations belonging to one of the given task(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of task IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/uploader/{ids}:
    get:
      summary: Get evaluations by uploader(s)
      description: |
        Returns an array with all evaluations uploaded by one of the given user(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/flow/{ids}:
    get:
      summary: Get evaluations by flow(s)
      description: |
        Returns an array with all evaluations generated by the given flow(s).
      parameters:
        - name: ids
          in: path
          description: Comma-separated list of user IDs, e.g. '1,2,3'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /evaluation/list/{filters}:
    get:
      summary: Filter evaluations by run, task, uploader and or flow
      description: |
        Returns an array with all evaluations matching any or all of the given filters. You can combine any of the four above filters any way you want.
      parameters:
        - name: filters
          in: path
          description: Any combination of filters (run,task,uploader and/or flow) and corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or 'task/1,2,3/flow/1,2'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations descriptions
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Flow:
    type: object
    properties:
      id:
        type: string
        description: ID of the flow, a positive integer
      uploader:
        type: string
        description: The uploader of the flow
      name:
        type: string
        description: The name of the flow
      version:
        type: string
        description: The version of the flow, set by OpenML. A positive integer
      version_label:
        type: string
        description: The version of the flow, as defined by the uploader, for reference. Can be any format as long as it is unique.
      description:
        type: string
        description: Wiki description of the flow, in (Git flavoured) markdown format
      upload_date:
        type: string
        description: The datetime that the flow was uploaded, format yyyy-MM-dd HH:mm:ss
      language:
        type: string
        description: The programming language the flow is written in.
      dependencies:
        type: string
        description: The libraries that this flow depends on, and their version numbers.
      tag:
        type: array
        items:
          type: string
        description: Tags added by OpenML users. Includes study tags in the form `study_1`
      parameter:
        type: object
        properties:
          name:
            type: string
            description: The name of the parameter
          data_type:
            type: string
            description: The data type of the parameter
          default_value:
            type: string
            description: The default value of the parameter
          description:
            type: string
            description: A description of the parameter
  Data:
    type: object
    properties:
      id:
        type: string
        description: ID of the dataset, a positive integer
      name:
        type: string
        description: The name of the dataset
      version:
        type: string
        description: The version of the dataset, set by OpenML. A positive integer
      description:
        type: string
        description: Wiki description of the dataset, in (Git flavoured) markdown format
      format:
        type: string
        description: Data format, for instance ARFF
      upload_date:
        type: string
        description: The datetime that the dataset was uploaded, format yyyy-MM-dd HH:mm:ss
      licence:
        type: string
        description: The licence granted for using the dataset, for instance Public or CC-BY
      url:
        type: string
        description: The URL where the data can be downloaded
      file_id:
        type: string
        description: The ID of the dataset file stored on the OpenML server
      default_target_attribute:
        type: string
        description: For tabular data, the name of the column that is typically used as the target attribute for that data set
      version_label:
        type: string
        description: The version of the dataset, as defined by the uploader, for reference. Can be any format as long as it is unique.
      tag:
        type: array
        items:
          type: string
        description: Tags added by OpenML users. Includes study tags in the form `study_1`
      visibility:
        type: string
        description: Who can see the dataset. For instance `public`.
      original_data_url:
        type: string
        description: The URL where the original data is hosted.
      status:
        type: string
        description: active, in_preparation, or deactivated
      md5_checksum:
        type: string
        description: Checksum to verify downloads of the dataset
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      additional_message:
        type: string
