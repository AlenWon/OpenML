<!-- Schema for implementation description at upload-time -->

<xs:schema targetNamespace="http://openml.org/openml" xmlns:oml="http://openml.org/openml" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
<xs:element name="implementation" type="oml:implementation"/>
<xs:complexType name="implementation">
  <xs:sequence>
		<!-- dublin core -->
		<xs:element name="name" type="xs:string"/>  <!-- Every implementation needs a good name, not conflicting with existing implementations on the server. Name-version combinations should be unique. -->  
		<xs:element name="version" minOccurs="0" type="xs:string"/> <!-- Every implementation needs a version, the default is 1.0 -->
		<xs:element name="description" type="xs:string"/> <!-- User description of the implementation. Required! -->
		<xs:element name="creator" minOccurs="0" maxOccurs="unbounded" type="xs:string"/> <!-- Optional. The persons/institutions that created the implementation. -->
		<xs:element name="contributor" minOccurs="0" maxOccurs="unbounded" type="xs:string"/> <!-- Optional. Minor contributors to the workflow. -->
    		<xs:element name="licence" minOccurs="0" type="xs:string"/> <!-- Optional. Default is none, meanining Public Domain or "dont know / care" -->
		<!-- textual info (for search) -->
    		<xs:element name="language" minOccurs="0" type="xs:string"/> <!-- Optional. Default is English. Starts with 1 upper case latter, rest lower case -->
		<xs:element name="full_description" minOccurs="0" type="xs:string"/> <!-- Optional. Full description of the workflow, e.g.  man pages filled in by tool. This is a much more elaborate description that given in the 'description' field. It may include information about all components of the workflow.-->
		<xs:element name="installation_notes" minOccurs="0" type="xs:string"/> <!-- Optional. How to run the workflow, are there additional hints? -->
		<!-- technical info -->
		<xs:element name="dependencies" minOccurs="0" type="xs:string"/> <!-- Optional. Dependencies of this implementations: environments, software packages or libraries necessary to run it. Don't forget version numbers for libraries. Free form, BUT every tool should specify a suitable format here and stick to it. Use comma separation for multiple dependencies. -->
		<!-- other -->
		<xs:element name="bibliographical_reference" minOccurs="0" maxOccurs="unbounded" type="oml:bibliographical_reference"/> <!-- Optional. Bibliographical reference (see below). --> 
		<!-- structure -->
		<xs:element name="parameter" minOccurs="0" maxOccurs="unbounded" type="oml:parameter"/> <!-- Optional. Statement of the (global/top-level) parameters of the workflow (see below). Don't repeat parameters here which are already stated in the components in the XML!-->
		<xs:element name="components" minOccurs="0" maxOccurs="1" type="oml:components"/> <!-- Optional. Descriptions of sub-implementations of this implementations. Typically components (operators/nodes) of a workflow or subfunctions of an algorithm (e.g. kernels). Components can have their own parameters. -->
		<!-- upload -->
		<xs:element name="source_format" minOccurs="0" maxOccurs="1" type="xs:string"/> <!-- Format in which the source code will be uploaded. -->
		<xs:element name="binary_format" minOccurs="0" maxOccurs="1" type="xs:string"/> <!-- Format in which the binary code will be uploaded.  -->
		<xs:element name="source_md5" minOccurs="0" maxOccurs="1" type="xs:string"/> <!-- MD5 checksum to check if the source code was correctly uploaded -->
		<xs:element name="binary_md5" minOccurs="0" maxOccurs="1" type="xs:string"/> <!-- MD5 checksum to check if the binary code was correctly uploaded -->
	
	</xs:sequence>
</xs:complexType>
<xs:complexType name="components">
	<xs:sequence>
		<xs:element name="implementation" minOccurs="1" maxOccurs="unbounded" type="oml:implementation"/> <!-- Sub-implementations -->
	</xs:sequence>
</xs:complexType>
<xs:complexType name="parameter">
	<xs:sequence>
		<xs:element name="name" type="xs:string"/> <!-- The name of the parameter -->
		<xs:element name="data_type" minOccurs="0" type="xs:string"/> <!-- Data type of the parameter. Use these names if possible: integer, numeric, string, vector, matrix, object. -->
		<xs:element name="default_value" minOccurs="0" type="xs:string"/> <!-- Default value of the parameter. Optional, but highly encouraged. -->
		<xs:element name="description" minOccurs="0" type="xs:string"/> <!-- Description of what this parameter does. -->
	</xs:sequence>
</xs:complexType>
<xs:complexType name="bibliographical_reference">
	<xs:sequence>
		<xs:element name="citation" type="xs:string"/> <!--  Free form, preferably how it would be referenced in a paper, or BibTeX format. -->
		<xs:element name="url" type="xs:string"/> <!-- URL to an online version of the paper, e.g. PDF -->
	</xs:sequence>
</xs:complexType>
</xs:schema>
